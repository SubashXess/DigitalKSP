{
    "sourceFile": "lib/pages/homepage/components/blog_list.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1737460231650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1737521486670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,31 +7,68 @@\n import '../../../models/blogs/blog_models.dart';\r\n import '../../blog_post_page/blog_post_page.dart';\r\n import 'headline.dart';\r\n \r\n-class BlogList extends StatelessWidget {\r\n+class BlogList extends StatefulWidget {\r\n   const BlogList({super.key, required this.items});\r\n \r\n   final List<BlogModels> items;\r\n \r\n   @override\r\n+  State<BlogList> createState() => _BlogListState();\r\n+}\r\n+\r\n+class _BlogListState extends State<BlogList> {\r\n+  final ScrollController _scrollController = ScrollController();\r\n+  bool _isLoadingMore = false;\r\n+\r\n+  @override\r\n+  void initState() {\r\n+    super.initState();\r\n+\r\n+    _scrollController.addListener(() {\r\n+      if (_scrollController.position.pixels >=\r\n+              _scrollController.position.maxScrollExtent &&\r\n+          !_isLoadingMore) {\r\n+        _loadMoreBlogs();\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  Future<void> _loadMoreBlogs() async {\r\n+    setState(() {\r\n+      _isLoadingMore = true;\r\n+    });\r\n+\r\n+    await context.read<BlogProviders>().getBlogs(type: 'Normal', limit: 10);\r\n+\r\n+    setState(() {\r\n+      _isLoadingMore = false;\r\n+    });\r\n+  }\r\n+\r\n+  @override\r\n   Widget build(BuildContext context) {\r\n     return Column(\r\n       crossAxisAlignment: CrossAxisAlignment.start,\r\n       children: [\r\n         const HeadlineSection(headline: 'Our blogs', showMore: false),\r\n         const SizedBox(height: 10.0),\r\n         ListView.separated(\r\n-          itemCount: items.length,\r\n+          controller: _scrollController,\r\n+          itemCount: widget.items.length + (_isLoadingMore ? 1 : 0),\r\n           shrinkWrap: true,\r\n           padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n           clipBehavior: Clip.none,\r\n           physics: const NeverScrollableScrollPhysics(),\r\n           itemBuilder: (context, index) {\r\n+            if (index == widget.items.length) {\r\n+              return const Center(child: CircularProgressIndicator.adaptive());\r\n+            }\r\n             return Padding(\r\n               padding: EdgeInsets.only(\r\n-                  bottom: index == items.length - 1 ? 0.0 : 10.0),\r\n-              child: BlogItem(item: items[index]),\r\n+                  bottom: index == widget.items.length - 1 ? 0.0 : 10.0),\r\n+              child: BlogItem(item: widget.items[index]),\r\n             );\r\n           },\r\n           separatorBuilder: (_, __) => Padding(\r\n             padding: const EdgeInsets.symmetric(vertical: 8.0),\r\n@@ -42,8 +79,44 @@\n     );\r\n   }\r\n }\r\n \r\n+\r\n+// class BlogList extends StatelessWidget {\r\n+//   const BlogList({super.key, required this.items});\r\n+\r\n+//   final List<BlogModels> items;\r\n+\r\n+//   @override\r\n+//   Widget build(BuildContext context) {\r\n+//     return Column(\r\n+//       crossAxisAlignment: CrossAxisAlignment.start,\r\n+//       children: [\r\n+//         const HeadlineSection(headline: 'Our blogs', showMore: false),\r\n+//         const SizedBox(height: 10.0),\r\n+//         ListView.separated(\r\n+//           itemCount: items.length,\r\n+//           shrinkWrap: true,\r\n+//           padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n+//           clipBehavior: Clip.none,\r\n+//           physics: const NeverScrollableScrollPhysics(),\r\n+//           itemBuilder: (context, index) {\r\n+//             return Padding(\r\n+//               padding: EdgeInsets.only(\r\n+//                   bottom: index == items.length - 1 ? 0.0 : 10.0),\r\n+//               child: BlogItem(item: items[index]),\r\n+//             );\r\n+//           },\r\n+//           separatorBuilder: (_, __) => Padding(\r\n+//             padding: const EdgeInsets.symmetric(vertical: 8.0),\r\n+//             child: Divider(height: 0.0, color: Colors.grey.shade200),\r\n+//           ),\r\n+//         ),\r\n+//       ],\r\n+//     );\r\n+//   }\r\n+// }\r\n+\r\n class BlogItem extends StatelessWidget {\r\n   const BlogItem({super.key, required this.item});\r\n \r\n   final BlogModels item;\r\n"
                },
                {
                    "date": 1737521498870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,12 @@\n import 'package:digitalksp/constants/styles.dart';\r\n import 'package:digitalksp/pages/author_page/author_page.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:intl/intl.dart';\r\n+import 'package:provider/provider.dart';\r\n \r\n import '../../../models/blogs/blog_models.dart';\r\n+import '../../../providers/blog_providers.dart';\r\n import '../../blog_post_page/blog_post_page.dart';\r\n import 'headline.dart';\r\n \r\n class BlogList extends StatefulWidget {\r\n"
                },
                {
                    "date": 1737521653023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n           itemCount: widget.items.length + (_isLoadingMore ? 1 : 0),\r\n           shrinkWrap: true,\r\n           padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n           clipBehavior: Clip.none,\r\n-          physics: const NeverScrollableScrollPhysics(),\r\n+          // physics: const NeverScrollableScrollPhysics(),\r\n           itemBuilder: (context, index) {\r\n             if (index == widget.items.length) {\r\n               return const Center(child: CircularProgressIndicator.adaptive());\r\n             }\r\n"
                },
                {
                    "date": 1737521669563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,8 +62,9 @@\n           padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n           clipBehavior: Clip.none,\r\n           // physics: const NeverScrollableScrollPhysics(),\r\n           itemBuilder: (context, index) {\r\n+            print(index);\r\n             if (index == widget.items.length) {\r\n               return const Center(child: CircularProgressIndicator.adaptive());\r\n             }\r\n             return Padding(\r\n"
                },
                {
                    "date": 1737521854344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,81 +9,65 @@\n import '../../../providers/blog_providers.dart';\r\n import '../../blog_post_page/blog_post_page.dart';\r\n import 'headline.dart';\r\n \r\n-class BlogList extends StatefulWidget {\r\n+class BlogList extends StatelessWidget {\r\n   const BlogList({super.key, required this.items});\r\n \r\n   final List<BlogModels> items;\r\n \r\n   @override\r\n-  State<BlogList> createState() => _BlogListState();\r\n-}\r\n-\r\n-class _BlogListState extends State<BlogList> {\r\n-  final ScrollController _scrollController = ScrollController();\r\n-  bool _isLoadingMore = false;\r\n-\r\n-  @override\r\n-  void initState() {\r\n-    super.initState();\r\n-\r\n-    _scrollController.addListener(() {\r\n-      if (_scrollController.position.pixels >=\r\n-              _scrollController.position.maxScrollExtent &&\r\n-          !_isLoadingMore) {\r\n-        _loadMoreBlogs();\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  Future<void> _loadMoreBlogs() async {\r\n-    setState(() {\r\n-      _isLoadingMore = true;\r\n-    });\r\n-\r\n-    await context.read<BlogProviders>().getBlogs(type: 'Normal', limit: 10);\r\n-\r\n-    setState(() {\r\n-      _isLoadingMore = false;\r\n-    });\r\n-  }\r\n-\r\n-  @override\r\n   Widget build(BuildContext context) {\r\n     return Column(\r\n       crossAxisAlignment: CrossAxisAlignment.start,\r\n       children: [\r\n         const HeadlineSection(headline: 'Our blogs', showMore: false),\r\n         const SizedBox(height: 10.0),\r\n-        ListView.separated(\r\n-          controller: _scrollController,\r\n-          itemCount: widget.items.length + (_isLoadingMore ? 1 : 0),\r\n-          shrinkWrap: true,\r\n-          padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n-          clipBehavior: Clip.none,\r\n-          // physics: const NeverScrollableScrollPhysics(),\r\n-          itemBuilder: (context, index) {\r\n-            print(index);\r\n-            if (index == widget.items.length) {\r\n-              return const Center(child: CircularProgressIndicator.adaptive());\r\n+        NotificationListener<ScrollNotification>(\r\n+          onNotification: (scrollNotification) {\r\n+            if (scrollNotification is ScrollEndNotification &&\r\n+                scrollNotification.metrics.pixels ==\r\n+                    scrollNotification.metrics.maxScrollExtent) {\r\n+              // Trigger pagination when scrolled to the end\r\n+              context\r\n+                  .read<BlogProviders>()\r\n+                  .loadMoreBlogs(type: 'Normal', limit: 10);\r\n             }\r\n-            return Padding(\r\n-              padding: EdgeInsets.only(\r\n-                  bottom: index == widget.items.length - 1 ? 0.0 : 10.0),\r\n-              child: BlogItem(item: widget.items[index]),\r\n-            );\r\n+            return false;\r\n           },\r\n-          separatorBuilder: (_, __) => Padding(\r\n-            padding: const EdgeInsets.symmetric(vertical: 8.0),\r\n-            child: Divider(height: 0.0, color: Colors.grey.shade200),\r\n+          child: ListView.separated(\r\n+            itemCount: items.length + 1, // Add one for the loading indicator\r\n+            shrinkWrap: true,\r\n+            padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n+            clipBehavior: Clip.none,\r\n+            physics: const NeverScrollableScrollPhysics(),\r\n+            itemBuilder: (context, index) {\r\n+              if (index == items.length) {\r\n+                // Loading indicator at the end\r\n+                final isLoading =\r\n+                    context.watch<BlogProviders>().isLoadingMore;\r\n+                return isLoading\r\n+                    ? const Center(child: CircularProgressIndicator())\r\n+                    : const SizedBox();\r\n+              }\r\n+              return Padding(\r\n+                padding: EdgeInsets.only(\r\n+                    bottom: index == items.length - 1 ? 0.0 : 10.0),\r\n+                child: BlogItem(item: items[index]),\r\n+              );\r\n+            },\r\n+            separatorBuilder: (_, __) => Padding(\r\n+              padding: const EdgeInsets.symmetric(vertical: 8.0),\r\n+              child: Divider(height: 0.0, color: Colors.grey.shade200),\r\n+            ),\r\n           ),\r\n         ),\r\n       ],\r\n     );\r\n   }\r\n }\r\n \r\n+\r\n // class BlogList extends StatelessWidget {\r\n //   const BlogList({super.key, required this.items});\r\n \r\n //   final List<BlogModels> items;\r\n"
                },
                {
                    "date": 1737522008981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n             itemCount: items.length + 1, // Add one for the loading indicator\r\n             shrinkWrap: true,\r\n             padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n             clipBehavior: Clip.none,\r\n-            physics: const NeverScrollableScrollPhysics(),\r\n+            // physics: const NeverScrollableScrollPhysics(),\r\n             itemBuilder: (context, index) {\r\n               if (index == items.length) {\r\n                 // Loading indicator at the end\r\n                 final isLoading = context.watch<BlogProviders>().isLoadingMore;\r\n"
                }
            ],
            "date": 1737460231650,
            "name": "Commit-0",
            "content": "import 'package:cached_network_image/cached_network_image.dart';\r\nimport 'package:digitalksp/constants/styles.dart';\r\nimport 'package:digitalksp/pages/author_page/author_page.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:intl/intl.dart';\r\n\r\nimport '../../../models/blogs/blog_models.dart';\r\nimport '../../blog_post_page/blog_post_page.dart';\r\nimport 'headline.dart';\r\n\r\nclass BlogList extends StatelessWidget {\r\n  const BlogList({super.key, required this.items});\r\n\r\n  final List<BlogModels> items;\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Column(\r\n      crossAxisAlignment: CrossAxisAlignment.start,\r\n      children: [\r\n        const HeadlineSection(headline: 'Our blogs', showMore: false),\r\n        const SizedBox(height: 10.0),\r\n        ListView.separated(\r\n          itemCount: items.length,\r\n          shrinkWrap: true,\r\n          padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n          clipBehavior: Clip.none,\r\n          physics: const NeverScrollableScrollPhysics(),\r\n          itemBuilder: (context, index) {\r\n            return Padding(\r\n              padding: EdgeInsets.only(\r\n                  bottom: index == items.length - 1 ? 0.0 : 10.0),\r\n              child: BlogItem(item: items[index]),\r\n            );\r\n          },\r\n          separatorBuilder: (_, __) => Padding(\r\n            padding: const EdgeInsets.symmetric(vertical: 8.0),\r\n            child: Divider(height: 0.0, color: Colors.grey.shade200),\r\n          ),\r\n        ),\r\n      ],\r\n    );\r\n  }\r\n}\r\n\r\nclass BlogItem extends StatelessWidget {\r\n  const BlogItem({super.key, required this.item});\r\n\r\n  final BlogModels item;\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return GestureDetector(\r\n      onTap: () => Navigator.push(context,\r\n          MaterialPageRoute(builder: (_) => BlogPostPage(blogId: item.id))),\r\n      child: Container(\r\n        width: MediaQuery.of(context).size.width,\r\n        color: Colors.transparent,\r\n        child: Row(\r\n          children: [\r\n            Container(\r\n              width: 80.0,\r\n              height: 100.0,\r\n              decoration: BoxDecoration(\r\n                  borderRadius:\r\n                      BorderRadius.circular(AppDimensions.borderRadius),\r\n                  color: AppThemes.defaultTheme,\r\n                  image: DecorationImage(\r\n                    image: CachedNetworkImageProvider(item.coverPhoto),\r\n                    fit: BoxFit.cover,\r\n                    onError: (exception, stackTrace) => Container(),\r\n                  )),\r\n            ),\r\n            const SizedBox(width: 10.0),\r\n            Expanded(\r\n              child: Column(\r\n                crossAxisAlignment: CrossAxisAlignment.start,\r\n                mainAxisAlignment: MainAxisAlignment.start,\r\n                children: [\r\n                  Row(\r\n                    children: [\r\n                      Expanded(\r\n                        child: Text(item.category,\r\n                            maxLines: 1,\r\n                            overflow: TextOverflow.ellipsis,\r\n                            style: Theme.of(context)\r\n                                .textTheme\r\n                                .bodySmall\r\n                                ?.copyWith(\r\n                                    fontWeight: FontWeight.w500,\r\n                                    color: Theme.of(context).primaryColor)),\r\n                      ),\r\n                      const SizedBox(width: 10.0),\r\n                      Text(\r\n                          DateFormat('d MMM, yyyy')\r\n                              .format(DateTime.parse(item.publishedDate)),\r\n                          maxLines: 1,\r\n                          overflow: TextOverflow.ellipsis,\r\n                          style: Theme.of(context)\r\n                              .textTheme\r\n                              .bodySmall\r\n                              ?.copyWith(color: Colors.grey)),\r\n                    ],\r\n                  ),\r\n                  const SizedBox(height: 8.0),\r\n                  Text(item.title,\r\n                      maxLines: 2,\r\n                      overflow: TextOverflow.ellipsis,\r\n                      style: Theme.of(context)\r\n                          .textTheme\r\n                          .titleMedium\r\n                          ?.copyWith(fontWeight: FontWeight.w500)),\r\n                  const SizedBox(height: 8.0),\r\n                  GestureDetector(\r\n                    onTap: () => Navigator.push(\r\n                        context,\r\n                        MaterialPageRoute(\r\n                            builder: (_) =>\r\n                                AuthorPage(authorId: item.authorModel.id))),\r\n                    child: Container(\r\n                      color: Colors.transparent,\r\n                      child: Row(\r\n                        children: [\r\n                          CircleAvatar(\r\n                              radius: 10.0,\r\n                              backgroundImage: CachedNetworkImageProvider(\r\n                                  item.authorModel.photoUrl)),\r\n                          const SizedBox(width: 8.0),\r\n                          Text(item.authorModel.name,\r\n                              maxLines: 1,\r\n                              overflow: TextOverflow.ellipsis,\r\n                              style: Theme.of(context)\r\n                                  .textTheme\r\n                                  .bodySmall\r\n                                  ?.copyWith(color: Colors.black87)),\r\n                        ],\r\n                      ),\r\n                    ),\r\n                  ),\r\n                ],\r\n              ),\r\n            ),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}