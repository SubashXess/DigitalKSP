{
    "sourceFile": "lib/pages/search_page/search_page.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1730954612057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732771511806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,256 @@\n+import 'package:digitalksp/providers/search_providers.dart';\r\n+import 'package:digitalksp/widgets/form_field_widget.dart';\r\n import 'package:flutter/material.dart';\r\n+import 'package:flutter_svg/flutter_svg.dart';\r\n+import 'package:provider/provider.dart';\r\n+import '../../widgets/buttons_widget.dart';\r\n+import 'components/author_list.dart';\r\n+import 'components/blog_list.dart';\r\n+import 'components/category_item.dart';\r\n+import 'components/job_item.dart';\r\n \r\n-class SearchPage extends StatelessWidget {\r\n+class SearchPage extends StatefulWidget {\r\n   const SearchPage({super.key});\r\n \r\n   @override\r\n+  State<SearchPage> createState() => _SearchPageState();\r\n+}\r\n+\r\n+class _SearchPageState extends State<SearchPage> {\r\n+  late final TextEditingController _searchController;\r\n+  late final FocusNode _searchNode;\r\n+\r\n+  @override\r\n+  void initState() {\r\n+    super.initState();\r\n+    _searchController = TextEditingController()..addListener(_onListen);\r\n+    _searchNode = FocusNode();\r\n+    context.read<SearchProviders>().getSearchResult(query: 'Debapriya');\r\n+  }\r\n+\r\n+  @override\r\n+  void dispose() {\r\n+    _searchController.dispose();\r\n+    _searchController.removeListener(_onListen);\r\n+    _searchNode.dispose();\r\n+    super.dispose();\r\n+  }\r\n+\r\n+  void _onListen() {\r\n+    setState(() {});\r\n+  }\r\n+\r\n+  @override\r\n   Widget build(BuildContext context) {\r\n-    return const Center(\r\n-      child: Text('Search Page'),\r\n+    return GestureDetector(\r\n+      onTap: () => FocusScope.of(context).unfocus(),\r\n+      child: Scaffold(\r\n+        appBar: AppBar(\r\n+          titleSpacing: 0.0,\r\n+          toolbarHeight: 92.0,\r\n+          title: Container(\r\n+            width: double.infinity,\r\n+            padding:\r\n+                const EdgeInsets.only(right: 16.0, top: 16.0, bottom: 16.0),\r\n+            child: RoundedFormField(\r\n+              controller: _searchController,\r\n+              node: _searchNode,\r\n+              hintText: 'Search your blog, category, author, profile etc...',\r\n+              prefixIcon: SvgPicture.asset(\r\n+                'assets/icons/search.svg',\r\n+                width: 24.0,\r\n+                height: 24.0,\r\n+                fit: BoxFit.scaleDown,\r\n+                colorFilter: _searchNode.hasFocus\r\n+                    ? ColorFilter.mode(\r\n+                        Theme.of(context).primaryColor, BlendMode.srcIn)\r\n+                    : null,\r\n+              ),\r\n+              suffixIcon:\r\n+                  _searchController.text.isNotEmpty && _searchNode.hasFocus\r\n+                      ? GestureDetector(\r\n+                          onTap: () => _searchController.clear(),\r\n+                          child: SvgPicture.asset(\r\n+                            'assets/icons/close.svg',\r\n+                            width: 20.0,\r\n+                            height: 20.0,\r\n+                            fit: BoxFit.scaleDown,\r\n+                            alignment: Alignment.center,\r\n+                          ),\r\n+                        )\r\n+                      : null,\r\n+            ),\r\n+          ),\r\n+        ),\r\n+        body: SingleChildScrollView(\r\n+          child: Column(\r\n+            crossAxisAlignment: CrossAxisAlignment.start,\r\n+            children: [\r\n+              Container(\r\n+                width: double.infinity,\r\n+                padding: const EdgeInsets.all(16.0),\r\n+                child: Column(\r\n+                  crossAxisAlignment: CrossAxisAlignment.start,\r\n+                  children: [\r\n+                    Row(\r\n+                      children: [\r\n+                        Expanded(\r\n+                          child: Text('CATEGORIES',\r\n+                              style: Theme.of(context)\r\n+                                  .textTheme\r\n+                                  .labelSmall\r\n+                                  ?.copyWith(fontWeight: FontWeight.w600)),\r\n+                        ),\r\n+                        const SizedBox(width: 10.0),\r\n+                        SmallTextButton(\r\n+                          label: 'View all',\r\n+                          onTap: () {},\r\n+                        )\r\n+                      ],\r\n+                    ),\r\n+                    const SizedBox(height: 20.0),\r\n+                    Wrap(\r\n+                      runSpacing: 10.0,\r\n+                      spacing: 10.0,\r\n+                      children: List.generate(\r\n+                        5,\r\n+                        (index) {\r\n+                          return const CategoryItem();\r\n+                        },\r\n+                      ),\r\n+                    ),\r\n+                  ],\r\n+                ),\r\n+              ),\r\n+              Container(\r\n+                width: double.infinity,\r\n+                padding: const EdgeInsets.all(16.0),\r\n+                child: Column(\r\n+                  crossAxisAlignment: CrossAxisAlignment.start,\r\n+                  children: [\r\n+                    Row(\r\n+                      children: [\r\n+                        Expanded(\r\n+                          child: Text('AUTHORS',\r\n+                              style: Theme.of(context)\r\n+                                  .textTheme\r\n+                                  .labelSmall\r\n+                                  ?.copyWith(fontWeight: FontWeight.w600)),\r\n+                        ),\r\n+                        const SizedBox(width: 10.0),\r\n+                        SmallTextButton(\r\n+                          label: 'View all',\r\n+                          onTap: () {},\r\n+                        )\r\n+                      ],\r\n+                    ),\r\n+                    const SizedBox(height: 20.0),\r\n+                    ListView.builder(\r\n+                      itemCount: 5,\r\n+                      shrinkWrap: true,\r\n+                      padding: EdgeInsets.zero,\r\n+                      clipBehavior: Clip.none,\r\n+                      physics: const NeverScrollableScrollPhysics(),\r\n+                      itemBuilder: (context, index) {\r\n+                        return Padding(\r\n+                          padding: EdgeInsets.only(\r\n+                              bottom: index == 5 - 1 ? 0.0 : 10.0),\r\n+                          child: const AuthorList(),\r\n+                        );\r\n+                      },\r\n+                    ),\r\n+                  ],\r\n+                ),\r\n+              ),\r\n+              Container(\r\n+                width: double.infinity,\r\n+                padding: const EdgeInsets.all(16.0),\r\n+                child: Column(\r\n+                  crossAxisAlignment: CrossAxisAlignment.start,\r\n+                  children: [\r\n+                    Row(\r\n+                      children: [\r\n+                        Expanded(\r\n+                          child: Text('BLOGS',\r\n+                              style: Theme.of(context)\r\n+                                  .textTheme\r\n+                                  .labelSmall\r\n+                                  ?.copyWith(fontWeight: FontWeight.w600)),\r\n+                        ),\r\n+                        const SizedBox(width: 10.0),\r\n+                        SmallTextButton(\r\n+                          label: 'View all',\r\n+                          onTap: () {},\r\n+                        )\r\n+                      ],\r\n+                    ),\r\n+                    const SizedBox(height: 20.0),\r\n+                    ListView.separated(\r\n+                      itemCount: 5,\r\n+                      shrinkWrap: true,\r\n+                      padding: EdgeInsets.zero,\r\n+                      clipBehavior: Clip.none,\r\n+                      physics: const NeverScrollableScrollPhysics(),\r\n+                      itemBuilder: (context, index) {\r\n+                        return const BlogItem();\r\n+                      },\r\n+                      separatorBuilder: (context, index) => Padding(\r\n+                        padding: const EdgeInsets.symmetric(vertical: 16.0),\r\n+                        child:\r\n+                            Divider(height: 0.0, color: Colors.grey.shade200),\r\n+                      ),\r\n+                    ),\r\n+                  ],\r\n+                ),\r\n+              ),\r\n+              Container(\r\n+                width: double.infinity,\r\n+                padding: const EdgeInsets.all(16.0),\r\n+                child: Column(\r\n+                  crossAxisAlignment: CrossAxisAlignment.start,\r\n+                  children: [\r\n+                    Row(\r\n+                      children: [\r\n+                        Expanded(\r\n+                          child: Text('JOB VACANCY',\r\n+                              style: Theme.of(context)\r\n+                                  .textTheme\r\n+                                  .labelSmall\r\n+                                  ?.copyWith(fontWeight: FontWeight.w600)),\r\n+                        ),\r\n+                        const SizedBox(width: 10.0),\r\n+                        SmallTextButton(\r\n+                          label: 'View all',\r\n+                          onTap: () {},\r\n+                        )\r\n+                      ],\r\n+                    ),\r\n+                    const SizedBox(height: 20.0),\r\n+                    SizedBox(\r\n+                      width: double.infinity,\r\n+                      height: 168.0,\r\n+                      child: ListView.builder(\r\n+                        itemCount: 5,\r\n+                        shrinkWrap: true,\r\n+                        padding: EdgeInsets.zero,\r\n+                        clipBehavior: Clip.none,\r\n+                        scrollDirection: Axis.horizontal,\r\n+                        itemBuilder: (context, index) {\r\n+                          return Padding(\r\n+                            padding: EdgeInsets.only(\r\n+                                right: index == 5 - 1 ? 0.0 : 10.0),\r\n+                            child: const JobItem(),\r\n+                          );\r\n+                        },\r\n+                      ),\r\n+                    ),\r\n+                  ],\r\n+                ),\r\n+              ),\r\n+            ],\r\n+          ),\r\n+        ),\r\n+      ),\r\n     );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1732771590754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,8 +78,9 @@\n                             alignment: Alignment.center,\r\n                           ),\r\n                         )\r\n                       : null,\r\n+                      onChanged: (value) {},\r\n             ),\r\n           ),\r\n         ),\r\n         body: SingleChildScrollView(\r\n"
                },
                {
                    "date": 1732771725080,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n                             alignment: Alignment.center,\r\n                           ),\r\n                         )\r\n                       : null,\r\n-              onChanged: (value) {},\r\n+              onChanged: _onSearchChanged,\r\n             ),\r\n           ),\r\n         ),\r\n         body: SingleChildScrollView(\r\n"
                },
                {
                    "date": 1732771765470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,8 +39,10 @@\n   void _onListen() {\r\n     setState(() {});\r\n   }\r\n \r\n+  _onSearchChanged(String query) {}\r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return GestureDetector(\r\n       onTap: () => FocusScope.of(context).unfocus(),\r\n"
                }
            ],
            "date": 1730954612056,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\n\r\nclass SearchPage extends StatelessWidget {\r\n  const SearchPage({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return const Center(\r\n      child: Text('Search Page'),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}