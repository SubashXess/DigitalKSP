{
    "sourceFile": "lib/pages/category_page/category_page.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1732181522486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732181841317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,7 +9,234 @@\n \r\n class _CategoryPageState extends State<CategoryPage> {\r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return Scaffold();\r\n+    return Scaffold(\r\n+      body:  Consumer<AuthorProviders>(builder: (context, provider, _) {\r\n+                    return provider.authorBlogCategories == null\r\n+                        ? const SizedBox()\r\n+                        : Container(\r\n+                            width: size.width,\r\n+                            padding:\r\n+                                const EdgeInsets.symmetric(horizontal: 16.0),\r\n+                            child: Column(\r\n+                              crossAxisAlignment: CrossAxisAlignment.start,\r\n+                              children: [\r\n+                                Text('Blogs',\r\n+                                    style: Theme.of(context)\r\n+                                        .textTheme\r\n+                                        .titleMedium),\r\n+                                const SizedBox(height: 10.0),\r\n+                                SizedBox(\r\n+                                  width: size.width,\r\n+                                  height: 36.0,\r\n+                                  child: ListView.builder(\r\n+                                    itemCount: provider.authorBlogCategories\r\n+                                        ?.categories.length,\r\n+                                    shrinkWrap: true,\r\n+                                    padding: EdgeInsets.zero,\r\n+                                    clipBehavior: Clip.none,\r\n+                                    scrollDirection: Axis.horizontal,\r\n+                                    itemBuilder: (context, index) {\r\n+                                      final category = provider\r\n+                                          .authorBlogCategories\r\n+                                          ?.categories[index];\r\n+                                      return GestureDetector(\r\n+                                        onTap: () {\r\n+                                          provider.selectCategory(category!,\r\n+                                              provider.authorById.first.id);\r\n+                                        },\r\n+                                        child: Container(\r\n+                                          margin: EdgeInsets.only(\r\n+                                              right: index ==\r\n+                                                      provider\r\n+                                                              .authorBlogCategories!\r\n+                                                              .categories\r\n+                                                              .length -\r\n+                                                          1\r\n+                                                  ? 0.0\r\n+                                                  : 4.0),\r\n+                                          padding: const EdgeInsets.symmetric(\r\n+                                              horizontal: 14.0),\r\n+                                          alignment: Alignment.center,\r\n+                                          decoration: BoxDecoration(\r\n+                                            borderRadius: BorderRadius.circular(\r\n+                                                AppDimensions.borderRadius *\r\n+                                                    10.0),\r\n+                                            border: Border.all(\r\n+                                                color:\r\n+                                                    provider.selectedCategory ==\r\n+                                                            category\r\n+                                                        ? Colors.white30\r\n+                                                        : Colors.black12),\r\n+                                            color: provider.selectedCategory ==\r\n+                                                    category\r\n+                                                ? Theme.of(context).primaryColor\r\n+                                                : Colors.transparent,\r\n+                                          ),\r\n+                                          child: Text(\r\n+                                            category ?? '',\r\n+                                            style: Theme.of(context)\r\n+                                                .textTheme\r\n+                                                .labelMedium\r\n+                                                ?.copyWith(\r\n+                                                    fontWeight: FontWeight.w400,\r\n+                                                    color:\r\n+                                                        provider.selectedCategory ==\r\n+                                                                category\r\n+                                                            ? Colors.white\r\n+                                                            : Colors.black54),\r\n+                                          ),\r\n+                                        ),\r\n+                                      );\r\n+                                    },\r\n+                                  ),\r\n+                                ),\r\n+                                const SizedBox(height: 20.0),\r\n+                                Consumer<AuthorProviders>(\r\n+                                    builder: (context, provider, _) {\r\n+                                  if (provider.blogByAuthor.isEmpty) {\r\n+                                    return const SizedBox();\r\n+                                  } else {\r\n+                                    final filteredBlogs =\r\n+                                        provider.getFilteredBlogs();\r\n+                                    return ListView.separated(\r\n+                                      itemCount: filteredBlogs.length,\r\n+                                      shrinkWrap: true,\r\n+                                      padding: EdgeInsets.zero,\r\n+                                      clipBehavior: Clip.antiAliasWithSaveLayer,\r\n+                                      physics:\r\n+                                          const NeverScrollableScrollPhysics(),\r\n+                                      itemBuilder: (context, index) {\r\n+                                        final blogs = filteredBlogs[index];\r\n+                                        return GestureDetector(\r\n+                                          onTap: () => Navigator.push(\r\n+                                            context,\r\n+                                            MaterialPageRoute(\r\n+                                              builder: (_) => BlogPostPage(\r\n+                                                blogId: blogs.id,\r\n+                                                headerSection: blogs,\r\n+                                                authorId: blogs.author,\r\n+                                              ),\r\n+                                            ),\r\n+                                          ),\r\n+                                          child: Container(\r\n+                                            color: Colors.transparent,\r\n+                                            width: size.width,\r\n+                                            child: Row(\r\n+                                              children: [\r\n+                                                Expanded(\r\n+                                                  child: Column(\r\n+                                                    crossAxisAlignment:\r\n+                                                        CrossAxisAlignment\r\n+                                                            .start,\r\n+                                                    mainAxisAlignment:\r\n+                                                        MainAxisAlignment.start,\r\n+                                                    children: [\r\n+                                                      Text(blogs.category,\r\n+                                                          maxLines: 1,\r\n+                                                          overflow: TextOverflow\r\n+                                                              .ellipsis,\r\n+                                                          style: Theme.of(\r\n+                                                                  context)\r\n+                                                              .textTheme\r\n+                                                              .bodySmall\r\n+                                                              ?.copyWith(\r\n+                                                                  color: Theme.of(\r\n+                                                                          context)\r\n+                                                                      .primaryColor)),\r\n+                                                      const SizedBox(\r\n+                                                          height: 8.0),\r\n+                                                      Text(blogs.title,\r\n+                                                          maxLines: 2,\r\n+                                                          overflow: TextOverflow\r\n+                                                              .ellipsis,\r\n+                                                          style: Theme.of(\r\n+                                                                  context)\r\n+                                                              .textTheme\r\n+                                                              .titleMedium\r\n+                                                              ?.copyWith(\r\n+                                                                  fontWeight:\r\n+                                                                      FontWeight\r\n+                                                                          .w500)),\r\n+                                                      const SizedBox(\r\n+                                                          height: 4.0),\r\n+                                                      Text(\r\n+                                                          blogs.blogDescription,\r\n+                                                          maxLines: 1,\r\n+                                                          overflow: TextOverflow\r\n+                                                              .ellipsis,\r\n+                                                          style: Theme.of(\r\n+                                                                  context)\r\n+                                                              .textTheme\r\n+                                                              .bodySmall\r\n+                                                              ?.copyWith(\r\n+                                                                  color: Colors\r\n+                                                                      .black54)),\r\n+                                                      const SizedBox(\r\n+                                                          height: 14.0),\r\n+                                                      Row(\r\n+                                                        children: [\r\n+                                                          const Icon(\r\n+                                                              Icons\r\n+                                                                  .access_time_rounded,\r\n+                                                              size: 16.0,\r\n+                                                              color:\r\n+                                                                  Colors.grey),\r\n+                                                          const SizedBox(\r\n+                                                              width: 4.0),\r\n+                                                          Text(\r\n+                                                            blogs.publishDate,\r\n+                                                            style: Theme.of(\r\n+                                                                    context)\r\n+                                                                .textTheme\r\n+                                                                .bodySmall\r\n+                                                                ?.copyWith(\r\n+                                                                    color: Colors\r\n+                                                                        .grey),\r\n+                                                          ),\r\n+                                                        ],\r\n+                                                      ),\r\n+                                                    ],\r\n+                                                  ),\r\n+                                                ),\r\n+                                                const SizedBox(width: 10.0),\r\n+                                                Container(\r\n+                                                  width: 80.0,\r\n+                                                  height: 80.0,\r\n+                                                  decoration: BoxDecoration(\r\n+                                                    borderRadius:\r\n+                                                        BorderRadius.circular(\r\n+                                                            AppDimensions\r\n+                                                                .borderRadius),\r\n+                                                    color: Colors.grey.shade200,\r\n+                                                    image: DecorationImage(\r\n+                                                        image:\r\n+                                                            CachedNetworkImageProvider(\r\n+                                                                blogs\r\n+                                                                    .coverPhoto),\r\n+                                                        fit: BoxFit.cover),\r\n+                                                  ),\r\n+                                                ),\r\n+                                              ],\r\n+                                            ),\r\n+                                          ),\r\n+                                        );\r\n+                                      },\r\n+                                      separatorBuilder: (context, index) =>\r\n+                                          Padding(\r\n+                                        padding: const EdgeInsets.symmetric(\r\n+                                            vertical: 16.0),\r\n+                                        child: Divider(\r\n+                                            height: 0.0,\r\n+                                            color: Colors.grey.shade200),\r\n+                                      ),\r\n+                                    );\r\n+                                  }\r\n+                                }),\r\n+                              ],\r\n+                            ),\r\n+                          );\r\n+                  }),\r\n+    );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1732181853079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,17 @@\n   State<CategoryPage> createState() => _CategoryPageState();\r\n }\r\n \r\n class _CategoryPageState extends State<CategoryPage> {\r\n+\r\n+\r\n   @override\r\n+  void initState() {\r\n+    \r\n+    super.initState();\r\n+  }\r\n+\r\n+  @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       body: Consumer<AuthorProviders>(builder: (context, provider, _) {\r\n         return provider.authorBlogCategories == null\r\n"
                },
                {
                    "date": 1732181868531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,9 @@\n   }\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n+    final Size size = MediaQuery.of(context).size;\r\n     return Scaffold(\r\n       body: Consumer<AuthorProviders>(builder: (context, provider, _) {\r\n         return provider.authorBlogCategories == null\r\n             ? const SizedBox()\r\n"
                }
            ],
            "date": 1732181522486,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\n\r\nclass CategoryPage extends StatefulWidget {\r\n  const CategoryPage({super.key});\r\n\r\n  @override\r\n  State<CategoryPage> createState() => _CategoryPageState();\r\n}\r\n\r\nclass _CategoryPageState extends State<CategoryPage> {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold();\r\n  }\r\n}"
        }
    ]
}