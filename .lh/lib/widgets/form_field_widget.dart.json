{
    "sourceFile": "lib/widgets/form_field_widget.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1731826448020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731826552927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,124 @@\n import 'package:flutter/material.dart';\r\n \r\n-class FormFieldWidget extends StatelessWidget {\r\n-  const FormFieldWidget({super.key});\r\n+class RoundedFormField extends StatelessWidget {\r\n+  const RoundedFormField({\r\n+    super.key,\r\n+    required this.controller,\r\n+    required this.node,\r\n+    this.autofillHints,\r\n+    this.keyboardType = TextInputType.text,\r\n+    this.maxLength,\r\n+    this.maxLines = 1,\r\n+    this.minLines,\r\n+    this.onChanged,\r\n+    this.onTap,\r\n+    this.capitalization = TextCapitalization.none,\r\n+    this.validator,\r\n+    this.prefixIcon,\r\n+    this.suffixIcon,\r\n+    required this.hintText,\r\n+    this.autovalidateMode,\r\n+    this.obscureText = false,\r\n+    this.label,\r\n+    this.enabled = true,\r\n+    this.textInputAction = TextInputAction.none,\r\n+    this.readOnly = false,\r\n+    this.inputFormatters,\r\n+    this.borderRadius,\r\n+    this.fillColor = const Color(0xFFEEEEEE),\r\n+    this.borderSide = BorderSide.none,\r\n+  });\r\n \r\n+  final TextEditingController controller;\r\n+  final FocusNode node;\r\n+  final Iterable<String>? autofillHints;\r\n+  final TextInputType keyboardType;\r\n+  final String? label;\r\n+  final int? maxLength;\r\n+  final int? maxLines;\r\n+  final int? minLines;\r\n+  final Function(String)? onChanged;\r\n+  final Function()? onTap;\r\n+  final TextCapitalization capitalization;\r\n+  final String? Function(String? value)? validator;\r\n+  final String? prefixIcon;\r\n+  final Widget? suffixIcon;\r\n+  final String hintText;\r\n+  final AutovalidateMode? autovalidateMode;\r\n+  final bool obscureText;\r\n+  final bool enabled;\r\n+  final bool readOnly;\r\n+  final TextInputAction textInputAction;\r\n+  final List<TextInputFormatter>? inputFormatters;\r\n+  final BorderRadius? borderRadius;\r\n+  final Color fillColor;\r\n+  final BorderSide borderSide;\r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return const Placeholder();\r\n+    return Column(\r\n+      crossAxisAlignment: CrossAxisAlignment.start,\r\n+      mainAxisSize: MainAxisSize.min,\r\n+      children: [\r\n+        label == null\r\n+            ? const SizedBox()\r\n+            : Text(label ?? '', style: Theme.of(context).textTheme.labelMedium),\r\n+        SizedBox(height: label == null ? 0.0 : 10.0),\r\n+        TextFormField(\r\n+          controller: controller,\r\n+          focusNode: node,\r\n+          autovalidateMode: autovalidateMode,\r\n+          keyboardType: keyboardType,\r\n+          maxLength: maxLength,\r\n+          minLines: minLines,\r\n+          maxLines: maxLines,\r\n+          clipBehavior: Clip.hardEdge,\r\n+          obscureText: obscureText,\r\n+          enabled: enabled,\r\n+          decoration: InputDecoration(\r\n+            hintText: hintText,\r\n+            fillColor: fillColor,\r\n+            filled: true,\r\n+            counterText: '',\r\n+            suffixIconConstraints:\r\n+                const BoxConstraints(minHeight: 40.0, minWidth: 40.0),\r\n+            contentPadding: EdgeInsets.symmetric(\r\n+                horizontal: AppDimension.horizontalPadding,\r\n+                vertical: AppDimension.verticalPadding * 1.65),\r\n+            prefixIcon: prefixIcon == null\r\n+                ? null\r\n+                : UiHelper.instance.svgIcon(\r\n+                    icon: prefixIcon ?? '',\r\n+                    size: 22.0,\r\n+                    color: node.hasFocus || controller.text.isNotEmpty\r\n+                        ? AppTheme.appPrimaryColor\r\n+                        : Colors.grey.shade400),\r\n+            suffixIcon: suffixIcon,\r\n+            border: OutlineInputBorder(\r\n+                borderSide: borderSide,\r\n+                borderRadius: borderRadius ?? BorderRadius.zero),\r\n+            enabledBorder: OutlineInputBorder(\r\n+                borderSide: borderSide,\r\n+                borderRadius: borderRadius ?? BorderRadius.zero),\r\n+            hintStyle: Theme.of(context)\r\n+                .textTheme\r\n+                .labelMedium\r\n+                ?.copyWith(color: Colors.grey.shade500),\r\n+          ),\r\n+          validator: validator,\r\n+          onTap: onTap,\r\n+          onChanged: onChanged,\r\n+          textInputAction: textInputAction,\r\n+          textCapitalization: capitalization,\r\n+          autofillHints: autofillHints,\r\n+          readOnly: readOnly,\r\n+          inputFormatters: inputFormatters,\r\n+          style: Theme.of(context)\r\n+              .textTheme\r\n+              .bodyMedium\r\n+              ?.copyWith(fontWeight: FontWeight.w600),\r\n+        ),\r\n+      ],\r\n+    );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1731826580910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,11 +82,11 @@\n             filled: true,\r\n             counterText: '',\r\n             suffixIconConstraints:\r\n                 const BoxConstraints(minHeight: 40.0, minWidth: 40.0),\r\n-            contentPadding: EdgeInsets.symmetric(\r\n-                horizontal: AppDimension.horizontalPadding,\r\n-                vertical: AppDimension.verticalPadding * 1.65),\r\n+            contentPadding: const EdgeInsets.symmetric(\r\n+                horizontal: 16.0,\r\n+                vertical: 14.0),\r\n             prefixIcon: prefixIcon == null\r\n                 ? null\r\n                 : UiHelper.instance.svgIcon(\r\n                     icon: prefixIcon ?? '',\r\n"
                },
                {
                    "date": 1731826602445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,16 +84,9 @@\n             suffixIconConstraints:\r\n                 const BoxConstraints(minHeight: 40.0, minWidth: 40.0),\r\n             contentPadding:\r\n                 const EdgeInsets.symmetric(horizontal: 16.0, vertical: 14.0),\r\n-            prefixIcon: prefixIcon == null\r\n-                ? null\r\n-                : UiHelper.instance.svgIcon(\r\n-                    icon: prefixIcon ?? '',\r\n-                    size: 22.0,\r\n-                    color: node.hasFocus || controller.text.isNotEmpty\r\n-                        ? AppTheme.appPrimaryColor\r\n-                        : Colors.grey.shade400),\r\n+            prefixIcon: prefixIcon,\r\n             suffixIcon: suffixIcon,\r\n             border: OutlineInputBorder(\r\n                 borderSide: borderSide,\r\n                 borderRadius: borderRadius ?? BorderRadius.zero),\r\n"
                },
                {
                    "date": 1731826611324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n   final Function(String)? onChanged;\r\n   final Function()? onTap;\r\n   final TextCapitalization capitalization;\r\n   final String? Function(String? value)? validator;\r\n-  final String? prefixIcon;\r\n+  final Widget? prefixIcon;\r\n   final Widget? suffixIcon;\r\n   final String hintText;\r\n   final AutovalidateMode? autovalidateMode;\r\n   final bool obscureText;\r\n"
                }
            ],
            "date": 1731826448019,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\n\r\nclass FormFieldWidget extends StatelessWidget {\r\n  const FormFieldWidget({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return const Placeholder();\r\n  }\r\n}"
        }
    ]
}